#include <stdio.h>
#include <stdlib.h>


struct Node {
    int data;
    struct Node* next;
};


void create(struct Node** head, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = newNode;  

    *head = newNode;
}


void insert(struct Node** head, int data) {
    if (*head == NULL) {
        create(head, data);
        return;
    }

    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    struct Node* last = *head;

    newNode->data = data;
   
    while (last->next != *head) {
        last = last->next;
    }
  
    last->next = newNode;
    newNode->next = *head;  
}


void delete(struct Node** head, int key) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct Node *temp = *head, *prev = NULL;

    
    if (temp->data == key) {
        if (temp->next == *head) {
           
            free(temp);
            *head = NULL;
            return;
        }
        
        while (temp->next != *head) {
            temp = temp->next;
        }
        
        temp->next = (*head)->next;
        free(*head);
        *head = temp->next;
        return;
    }

    
    while (temp->next != *head && temp->data != key) {
        prev = temp;
        temp = temp->next;
    }

   
    if (temp->data != key) {
        printf("Element %d not found.\n", key);
        return;
    }

    prev->next = temp->next;
    free(temp);
}


void reverse(struct Node** head) {
    if (*head == NULL || (*head)->next == *head) {
        
        return;
    }

    struct Node *prev = NULL, *current = *head, *next = NULL;
    struct Node *lastNode = *head;

   
    do {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
    } while (current != *head);

    
    *head = prev;

    
    lastNode->next = *head;
}


void display(struct Node* head) {
    if (head == NULL) {
        printf("The list is empty.\n");
        return;
    }

    struct Node* temp = head;
    do {
        printf("%d -> ", temp->data);
        temp = temp->next;
    } while (temp != head);
    printf("(head)\n");
}

int main() {
    struct Node* head = NULL;
    int choice, data;

    while (1) {
        
        printf("\nMenu:\n");
        printf("1. Create List\n");
        printf("2. Insert\n");
        printf("3. Delete\n");
        printf("4. Reverse\n");
        printf("5. Display List\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the element to create the list: ");
                scanf("%d", &data);
                create(&head, data);
                break;

            case 2:
                printf("Enter the element to insert: ");
                scanf("%d", &data);
                insert(&head, data);
                break;

            case 3:
                printf("Enter the element to delete: ");
                scanf("%d", &data);
                delete(&head, data);
                break;

            case 4:
                reverse(&head);
                printf("List reversed successfully.\n");
                break;

            case 5:
                printf("The current list is: ");
                display(head);
                break;

            case 6:
                printf("Exiting the program.\n");
                exit(0);

            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
