#include <stdio.h>
#include <stdlib.h>


struct node {
    int key;
    struct node *left, *right;
};


struct node* newNode(int item) {
    struct node* temp = (struct node*)malloc(sizeof(struct node));
    temp->key = item;
    temp->left = temp->right = NULL;
    return temp;
}


void inorder(struct node* root) {
    if (root != NULL) {
        inorder(root->left); 
        printf("%d ", root->key); 
        inorder(root->right);  
    }
}


void preorder(struct node* root) {
    if (root != NULL) {
        printf("%d ", root->key);  
        preorder(root->left);  
        preorder(root->right); 
    }
}


struct node* insert(struct node* root, int key) {
    
    if (root == NULL) {
        return newNode(key);
    }

    
    if (key < root->key) {
        root->left = insert(root->left, key);  
    } else if (key > root->key) {
        root->right = insert(root->right, key); 
    }

   
    return root;
}


struct node* minValueNode(struct node* node) {
    struct node* current = node;

    
    while (current && current->left != NULL) {
        current = current->left;
    }

    return current;
}


struct node* deleteNode(struct node* root, int key) {
  
    if (root == NULL) {
        return root;
    }

    
    if (key < root->key) {
        root->left = deleteNode(root->left, key);  // Go left
    } else if (key > root->key) {
        root->right = deleteNode(root->right, key);  // Go right
    } else {
      
        if (root->left == NULL) {
            struct node* temp = root->right;
            free(root);  
            return temp;
        } else if (root->right == NULL) {
            struct node* temp = root->left;
            free(root);  
            return temp;
        }

     
        struct node* temp = minValueNode(root->right);

        
        root->key = temp->key;

      
        root->right = deleteNode(root->right, temp->key);
    }

    return root;
}


int main() {
    struct node* root = NULL;
    int choice, key;

    while (1) {
        printf("\nMenu:\n");
        printf("1: Insert a number\n");
        printf("2: Delete a number\n");
        printf("3: Inorder Traversal\n");
        printf("4: Preorder Traversal\n");
        printf("0: Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the number to insert: ");
                scanf("%d", &key);
                root = insert(root, key);
                break;

            case 2:
                printf("Enter the number to delete: ");
                scanf("%d", &key);
                root = deleteNode(root, key);
                break;

            case 3:
                printf("Inorder Traversal: ");
                inorder(root);
                printf("\n");
                break;

            case 4:
                printf("Preorder Traversal: ");
                preorder(root);
                printf("\n");
                break;

            case 0:
                printf("Exiting the program.\n");
                exit(0);

            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
