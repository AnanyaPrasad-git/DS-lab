#include<stdio.h>
#include<stdlib.h>

#define MAX 100


struct node {
    int vertex;
    struct node* next;
};

typedef struct node* GNODE;

GNODE graph[MAX];  
int visited[MAX]; 

void DFS(int v) {
    visited[v] = 1;  
    printf("%d ", v); 

    GNODE p = graph[v];  
    while (p != NULL) {
        if (!visited[p->vertex]) { 
            DFS(p->vertex);  
        }
        p = p->next;  
    }
}


void addEdge(int src, int dest) {
    GNODE newNode = (GNODE)malloc(sizeof(struct node));
    newNode->vertex = dest;
    newNode->next = graph[src];
    graph[src] = newNode;
}


void main() {
    int n, E, i, s, d;
    
    // Initialize the graph
    for (i = 0; i < MAX; i++) {
        graph[i] = NULL;
        visited[i] = 0;
    }

  
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter number of edges: ");
    scanf("%d", &E);

  
    for (i = 0; i < E; i++) {
        printf("Enter edge (source destination): ");
        scanf("%d %d", &s, &d);
        addEdge(s, d);
    }

    
    printf("DFS traversal starting from vertex 0:\n");
    DFS(0);  
    printf("\n");
}
